# HTTP - Redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name {{SITE_DOMAIN}};

    # For Let's Encrypt verification
    location /.well-known/acme-challenge/ {
        root /var/www/{{SITE_DOMAIN}}/public;
    }

    # Redirect all other traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name {{SITE_DOMAIN}};

    root /var/www/{{SITE_DOMAIN}}/public;
    index index.php;

    # SSL Configuration (will be managed by Certbot)
    ssl_certificate /etc/letsencrypt/live/{{SITE_DOMAIN}}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{SITE_DOMAIN}}/privkey.pem;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;

    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # HSTS (optional, uncomment if you want strict HTTPS enforcement)
    # add_header Strict-Transport-Security "max-age=63072000" always;

    # Logging
    access_log /var/log/nginx/{{SITE_DOMAIN}}.access.log;
    error_log /var/log/nginx/{{SITE_DOMAIN}}.error.log;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Main location
    location / {
        try_files $uri $uri/ /index.php?$args;
    }

    # PHP handling
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        fastcgi_intercept_errors on;
        fastcgi_buffer_size 16k;
        fastcgi_buffers 4 16k;
        fastcgi_read_timeout 300;
    }

    # Media files caching
    location ~* \.(jpg|jpeg|png|gif|webp|svg|ico|pdf|woff|woff2|ttf|eot)$ {
        expires 1M;
        add_header Cache-Control "public, immutable";
        access_log off;
    }

    # CSS and JS caching
    location ~* \.(css|js)$ {
        expires 1w;
        add_header Cache-Control "public";
    }

    # API endpoints caching
    location ~* \.json$ {
        expires 1h;
        add_header Cache-Control "public";
    }

    # Security: Block access to sensitive files and directories
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ /(content|site|kirby|storage|vendor)/ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Prevent access to specific files
    location ~ /(\.git|\.env|composer\.json|composer\.lock|package\.json)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
}

